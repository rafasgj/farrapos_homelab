---
- name: Ensure registry directories exist
  ansible.builtin.file:
    path: /opt/farrapos/registry/data
    mode: "0755"
    owner: root
    group: root
    state: directory

- name: Define image name
  when: registry_image is undefined
  block:
    - name: Autodetect target architecture
      when: registry_arch is undefined and registry_image is undefined
      block:
        - name: Detect target platform
          ansible.builtin.shell: |
            set -eu
            case "$(uname -m)" in
              aarch*) echo -n "aarch64" ;;
              armv6*) echo -n "arm-6" ;;
              x86*) echo -n "x86-64" ;;
              *) exit 1 ;;
            esac
          args:
            executable: /bin/bash
          changed_when: false
          register: arch

        - name: Set registry_arch
          ansible.builtin.set_fact:
            registry_arch: "{{ arch.stdout }}"

    - name: For arm-6
      when: registry_arch == "arm-6"
      ansible.builtin.set_fact:
        registry_image: docker.io/arm32v6/registry:latest

    - name: For aaarch64
      when: registry_arch == "aarch64"
      ansible.builtin.set_fact:
        registry_image: docker.io/arm64v8/registry:latest

    - name: For x86-64
      when: registry_arch == "x86-64"
      ansible.builtin.set_fact:
        registry_image: docker.io/amd64/registry:latest

- name: Configure service and system
  block:
    - name: Check if quadlet is supported
      ansible.builtin.stat:
        path: /usr/libexec/podman/quadlet
      register: quadlet_support

    - name: Configure systemd service without quadlet
      when: not quadlet_support.stat.exists
      block:
        - name: Configure OCI registry service
          ansible.builtin.template:
            src: "files/registry.service"
            dest: "/opt/farrapos/registry/farrapos-registry.service"
            owner: root
            group: root
            mode: "0644"

        - name: Create link for OCI registry service
          ansible.builtin.file:
            src: "/opt/farrapos/registry/farrapos-registry.service"
            dest: "/etc/systemd/system/farrapos-registry.service"
            state: link

    - name: Configure systemd service with quadlet
      when: quadlet_support.stat.exists
      block:
        - name: Ensure quadlet_dir is set
          ansible.builtin.set_fact:
            quadlet_dir: /etc/containers/systemd
          when: quadlet_dir is undefined

        - name: Configure registry quadlet
          ansible.builtin.template:
            src: files/registry.container
            dest: "{{ quadlet_dir }}/farrapos-registry.container"
            owner: root
            group: root
            mode: "0644"

- name: Ensure service is running
  ansible.builtin.systemd_service:
    daemon_reload: true
    name: "farrapos-registry"
    enabled: true
    state: restarted

- name: Open ports in the firewall
  when: registry_use_firewalld
  ansible.posix.firewalld:
    port: "{{ registry_port }}/tcp"
    permanent: true
    zone: public
    state: enabled
...
